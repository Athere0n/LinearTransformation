<UserControl x:Class="LinearTransformation.View.MainControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LinearTransformation.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <Style TargetType="GroupBox">
            <Setter Property="BorderBrush"          Value="White"/>
            <Setter Property="BorderThickness"      Value="1"/>
        </Style>
        
        <Style TargetType="Label" x:Key="GroupBoxHeaderLabel">
            <Setter Property="FontFamily"           Value="Courier New"/>
            <Setter Property="FontSize"             Value="14"/>
            <Setter Property="FontWeight"           Value="Bold"/>
            <Setter Property="Foreground"           Value="Wheat"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="VerticalAlignment"    Value="Center"/>
            <Setter Property="FontSize"             Value="14"/>
            <Setter Property="Foreground"           Value="White"/>
            <Setter Property="Margin"               Value="10 0 2 0"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment"            Value="Center"/>
            <Setter Property="Width"                        Value="75"/>
            <Setter Property="HorizontalContentAlignment"   Value="Right"/>
            <Setter Property="FontFamily"                   Value="Courier New"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="VerticalAlignment"    Value="Center"/>
            <Setter Property="FontFamily"           Value="Courier New"/>
            <Setter Property="FontWeight"           Value="Bold"/>
            <Setter Property="Margin"               Value="10 0 0 0"/>
            <Setter Property="Padding"              Value="5 3 5 3"/>
            <Setter Property="MinWidth"             Value="100"/>
            <Setter Property="Background"           Value="#edeeef"/>
            <Setter Property="Foreground"           Value="Black"/>
            <Setter Property="BorderBrush"          Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
                                Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#838a90"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                </Trigger>

                <Trigger Property="IsPressed" Value="False">
                    <Setter Property="Background" Value="#edeeef"></Setter>
                    <Setter Property="Foreground" Value="Black"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ToggleButton">
            <Setter Property="FontFamily"           Value="Courier New"/>
            <Setter Property="Margin"               Value="2.5 0 2.5 0"/>
            <Setter Property="Padding"              Value="5 3 5 3"/>
            <Setter Property="MinWidth"             Value="100"/>
            <Setter Property="Background"           Value="#838a90"/>
            <Setter Property="Foreground"           Value="Black"/>
            <Setter Property="BorderBrush"          Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
                                Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="#edeeef"></Setter>
                    <Setter Property="Foreground" Value="Black"></Setter>
                    <Setter Property="BorderBrush" Value="LimeGreen"></Setter>
                    <Setter Property="BorderThickness" Value="2"></Setter>
                </Trigger>

                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="FontWeight" Value="Normal"></Setter>
                    <Setter Property="Background" Value="#838a90"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                    <Setter Property="BorderBrush" Value="#cc0000"></Setter>
                    <Setter Property="BorderThickness" Value="2"></Setter>
                </Trigger>

            </Style.Triggers>

        </Style>

    </UserControl.Resources>


    <Grid Background="#4E5961">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="390"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="170"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--add new stuff-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--transformation-->
            <GroupBox Grid.Row="0" Margin="5 0 5 0">
                
                <GroupBox.Header>
                    <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="Transformation"/>
                </GroupBox.Header>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">

                    <StackPanel Orientation="Vertical" VerticalAlignment="Stretch">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <Label Content="îᵪ :"/>
                            <TextBox GotFocus="TextBox_GotFocus" x:Name="InputIHatX" Text="1"/>

                            <Label Content="ĵᵪ :"/>
                            <TextBox GotFocus="TextBox_GotFocus" x:Name="InputIHatY" Text="0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <Label Content="îᵧ :"/>
                            <TextBox GotFocus="TextBox_GotFocus" x:Name="InputJHatX" Text="0"/>

                            <Label Content="ĵᵧ :"/>
                            <TextBox GotFocus="TextBox_GotFocus" x:Name="InputJHatY" Text="1"/>
                        </StackPanel>

                    </StackPanel>
                    
                    <Button Content="Transform" Click="Button_Click_Transform"/>
                    <Button x:Name="Button_Undo" IsEnabled="False" Content="Undo" Click="Button_Click_UndoTransform"/>

                </StackPanel>
                
            </GroupBox>

            <!--Display-->
            <GroupBox Grid.Row="1" Margin="5 0 5 0">
            
                <GroupBox.Header>
                    <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="Display"/>
                </GroupBox.Header>
            
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

                    <ToggleButton x:Name="ToggleButton_StaticGrid" 
                                  Content="Static Grid"
                                  Checked="ToggleButtons_StateChanged" Unchecked="ToggleButtons_StateChanged" IsChecked="True"/>
                    <ToggleButton x:Name="ToggleButton_DynamicGrid" 
                                  Content="Dynamic Grid"
                                  Checked="ToggleButtons_StateChanged" Unchecked="ToggleButtons_StateChanged" IsChecked="True"/>
                    <ToggleButton x:Name="ToggleButton_Vectors" 
                                  Content="Vectors"
                                  Checked="ToggleButtons_StateChanged" Unchecked="ToggleButtons_StateChanged" IsChecked="True"/>
                    <ToggleButton x:Name="ToggleButton_BasisVectors" 
                                  Content="Basis Vectors" 
                                  Checked="ToggleButtons_StateChanged" Unchecked="ToggleButtons_StateChanged" IsChecked="True"/>
                    <ToggleButton x:Name="ToggleButton_MousePosition" 
                                  Content="Mouse Position" 
                                  Checked="ToggleButtons_StateChanged" Unchecked="ToggleButtons_StateChanged" IsChecked="True"/>

                </StackPanel>
            
            </GroupBox>

        </Grid>
        
        <!--window settings-->
        <GroupBox Grid.Column="1" Margin="0 0 5 0" Padding="15 0 0 0">
            
            <GroupBox.Header>
                <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="Settings"/>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="65"/>
                    <ColumnDefinition MaxWidth="90"/>
                    <ColumnDefinition MaxWidth="25"/>
                    <ColumnDefinition MaxWidth="65"/>
                    <ColumnDefinition MaxWidth="90"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
            
                <!--row 0-->
                <Label      Grid.Row="0" Grid.Column="0" Content="Min x:"/>
                <TextBox    Grid.Row="0" Grid.Column="1" GotFocus="TextBox_GotFocus" x:Name="InputMinX"/>
                    
                <Label      Grid.Row="0" Grid.Column="3" Content="Min y:"/>
                <TextBox    Grid.Row="0" Grid.Column="4" GotFocus="TextBox_GotFocus" x:Name="InputMinY"/>

                <!--row 1-->
                <Label      Grid.Row="1" Grid.Column="0" Content="Max x:"/>
                <TextBox    Grid.Row="1" Grid.Column="1" GotFocus="TextBox_GotFocus" x:Name="InputMaxX"/>
                                      
                <Label      Grid.Row="1" Grid.Column="3" Content="Max y:"/>
                <TextBox    Grid.Row="1" Grid.Column="4" GotFocus="TextBox_GotFocus" x:Name="InputMaxY"/>

                <!--row 2-->
                <Label      Grid.Row="2" Grid.Column="0" Content="Unit x:"/>
                <TextBox    Grid.Row="2" Grid.Column="1" GotFocus="TextBox_GotFocus" x:Name="InputUnitX"/>
                                      
                <Label      Grid.Row="2" Grid.Column="3" Content="Unit y:"/>
                <TextBox    Grid.Row="2" Grid.Column="4" GotFocus="TextBox_GotFocus" x:Name="InputUnitY"/>

                <!--row 3-->
                <Label      Grid.Row="3" Grid.Column="0" Content="Step x:"/>
                <TextBox    Grid.Row="3" Grid.Column="1" GotFocus="TextBox_GotFocus" x:Name="InputStepX"/>
                                      
                <Label      Grid.Row="3" Grid.Column="3" Content="Step y:"/>
                <TextBox    Grid.Row="3" Grid.Column="4" GotFocus="TextBox_GotFocus" x:Name="InputStepY"/>


                <StackPanel Grid.Row="4" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Center">

                    <Button Content="Apply Changes" Click="Button_Click_ApplyChanges"/>
                    <Button Content="Revert Changes" Click="Button_Click_RevertChanges"/>
                    
                </StackPanel>
                            
            </Grid>
            
        </GroupBox>
        
        <!--Vectors-->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--new vector-->
            <GroupBox Margin=" 0 0 5 0">

                <GroupBox.Header>
                    <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="New Vector"/>
                </GroupBox.Header>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                        
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                    
                        <Border     Width="25"
                                    Height="25"
                                    CornerRadius="3"
                                    BorderBrush="White"
                                    BorderThickness="2">
                            <Canvas x:Name="InputVectorColour" Background="PaleVioletRed" MouseLeftButtonDown="Canvas_MouseLeftButtonDown_SelectVectorColour"/>
                        </Border>

                        <Label      Content="x:"/>
                        <TextBox    GotFocus="TextBox_GotFocus" x:Name="InputVectorX"/>

                        <Label      Content="y:"/>
                        <TextBox    GotFocus="TextBox_GotFocus" x:Name="InputVectorY"/>
                   
                        <Button     Content="Add Vector" Click="Button_Click_AddVector"/>
                        
                    </StackPanel>
                    
                    <Button Grid.Row="1" HorizontalAlignment="Center" Content="Add Random Vector" Click="Button_Click_AddRandomVector"/>

                </Grid>

            </GroupBox>

            <!--Vectorlist-->
            <GroupBox Grid.Row="1" Margin="0 0 5 5">

                <GroupBox.Header>
                    <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="Vectorlist"/>
                </GroupBox.Header>

                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding Vectors}"/>
                </ScrollViewer>

            </GroupBox>

        </Grid>

        <!--Coordinate System-->
        <GroupBox Grid.Column="0" Grid.Row="1" Margin="5 0 5 5">
            
            <GroupBox.Header>
                <Label Style="{StaticResource GroupBoxHeaderLabel}" Content="Coordinate System"/>
            </GroupBox.Header>
            
            <ContentControl Background="Black" Content="{Binding CoordinateSystemControl}"/>
            
        </GroupBox>

    </Grid>
    
</UserControl>
